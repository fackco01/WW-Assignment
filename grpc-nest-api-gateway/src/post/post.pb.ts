// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.0.2
//   protoc               v5.27.3
// source: post.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "post";

export interface Post {
  id: number;
  title: string;
  content: string;
  author: string;
  createdAt: number;
  updatedAt: number;
}

export interface CreatePostRequest {
  id: number;
  title: string;
  content: string;
  author: string;
  createAt: string;
  updateAt: string;
}

export interface CreatePostResponse {
  id: number;
  message: string;
  post: Post | undefined;
}

export interface UpdatePostRequest {
  id: number;
  title: string;
  content: string;
}

export interface UpdatePostResponse {
  message: string;
}

export interface GetAllPostsRequest {
}

export interface GetAllPostsResponse {
  post: Post[];
}

export interface GetDetailPostRequest {
  id: number;
}

export interface GetDetailPostResponse {
  id: number;
  message: string;
  post: Post | undefined;
}

export interface DeletePostRequest {
  id: number;
}

export interface DeletePostResponse {
  message: string;
}

export const POST_PACKAGE_NAME = "post";

export interface PostServiceClient {
  createPost(request: CreatePostRequest): Observable<CreatePostResponse>;

  updatePost(request: UpdatePostRequest): Observable<UpdatePostResponse>;

  getAllPosts(request: GetAllPostsRequest): Observable<GetAllPostsResponse>;

  getDetailPost(request: GetDetailPostRequest): Observable<GetDetailPostResponse>;

  deletePost(request: DeletePostRequest): Observable<DeletePostResponse>;
}

export interface PostServiceController {
  createPost(
    request: CreatePostRequest,
  ): Promise<CreatePostResponse> | Observable<CreatePostResponse> | CreatePostResponse;

  updatePost(
    request: UpdatePostRequest,
  ): Promise<UpdatePostResponse> | Observable<UpdatePostResponse> | UpdatePostResponse;

  getAllPosts(
    request: GetAllPostsRequest,
  ): Promise<GetAllPostsResponse> | Observable<GetAllPostsResponse> | GetAllPostsResponse;

  getDetailPost(
    request: GetDetailPostRequest,
  ): Promise<GetDetailPostResponse> | Observable<GetDetailPostResponse> | GetDetailPostResponse;

  deletePost(
    request: DeletePostRequest,
  ): Promise<DeletePostResponse> | Observable<DeletePostResponse> | DeletePostResponse;
}

export function PostServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createPost", "updatePost", "getAllPosts", "getDetailPost", "deletePost"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("PostService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("PostService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const POST_SERVICE_NAME = "PostService";
